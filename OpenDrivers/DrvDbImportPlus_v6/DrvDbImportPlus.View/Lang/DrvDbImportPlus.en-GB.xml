<?xml version="1.0" encoding="utf-8" ?>
<DrvDbImportPlusDictionaries>
  <Dictionary key="Scada.Comm.Drivers.DrvDbImportPlus.View.Forms.FrmConfig">
	  <Phrase key="this">DB Import Plus - Device {0} Properties</Phrase>
	  <Phrase key="pageDatabase">Database</Phrase>
	  <Phrase key="gbDataSourceType">Data Source Type</Phrase>
	  <Phrase key="gbConnection">Connection</Phrase>
	  <Phrase key="btnConnectionTest">Testing connection...</Phrase>
	  <Phrase key="lblServer">Server</Phrase>
	  <Phrase key="lblDatabase">Database</Phrase>
	  <Phrase key="lblUser">User</Phrase>
	  <Phrase key="lblPassword">Password</Phrase>
	  <Phrase key="lblPort">Port</Phrase>
	  <Phrase key="lblOptionalOptions">Optional Options</Phrase>
	  <Phrase key="lblConnectionString">Connection string</Phrase>
	  <Phrase key="pageQuery">Data Retrieval</Phrase>
	  <Phrase key="lblSelectQuery">SQL</Phrase>
	  <Phrase key="pageCommands">Commands</Phrase>
	  <Phrase key="gbCommand">Command</Phrase>
	  <Phrase key="btnCreateCommand">Create</Phrase>
	  <Phrase key="btnDeleteCommand">Delete</Phrase>
	  <Phrase key="gbCommandParams">Command Parameters</Phrase>
	  <Phrase key="lblCmdNum">Command number</Phrase>
	  <Phrase key="lblCmdCode">Command code</Phrase>
	  <Phrase key="lblName">Name</Phrase>
	  <Phrase key="lblCmdQuery">SQL</Phrase>
	  <Phrase key="pageData">Data</Phrase>
	  <Phrase key="lblCmdQuery">Run SQL query</Phrase>
	  <Phrase key="pageSettings">Settings</Phrase>
	  <Phrase key="gpbTagFormatDatabase">Format of tags from the database</Phrase>
	  <Phrase key="rdbKPTagsBasedRequestedTableColumns">KP tags based on the list of requested table columns</Phrase>
	  <Phrase key="rdbKPTagsBasedRequestedTableRows">KP tags based on the list of requested table rows</Phrase>
	  <Phrase key="gpbTagsCount">Tag count</Phrase>
	  <Phrase key="chkAutoTagCount">Auto</Phrase>
	  <Phrase key="btnSave">Save</Phrase>
	  <Phrase key="btnClose">Close</Phrase>
	  <Phrase key="pageHelp">Help</Phrase>
	  <Phrase key="txtHelp">
		  On the Database tab, you need to specify the database type and specify the parameters of the database connection.
		  If you need to enter non-standard connection parameters, you can edit the connection string directly.
		  Examples of connection parameters can be found on the website https://www.connectionstrings.com .

		  The driver assumes two formats for receiving data - these are "KP tags based on the list of requested table columns" and
		  "KP tags based on the list of requested table rows".
		  In the format "KP tags based on the list of requested table columns", the SQL query is compiled so that in the column name
		  there will be the name of the KP tag, and in the first line the value.

		  Example, given the table

		  +----------+----------+----------+
		  | COLUMN_1 | COLUMN_2 | COLUMN_3 |
		  +----------+----------+----------+
		  |    1,000 |    2,000 |    3,000 |
		  +----------+----------+----------+
		  |    3,000 |    4,000 |    5,000 |
		  +----------+----------+----------+
		  |    6,000 |    7,000 |    8,000 |
		  +----------+----------+----------+

		  If each column in the data source is the value of one variable, then the query will be simple:
		  SELECT COLUMN_1 AS TAGNAME_1, COLUMN_2 AS TAGNAME_2, COLUMN_3 AS TAGNAME_3
		  FROM DATATABLE_NAME
		  WHERE УСЛОВИЕ

		  If the data source in this example,
		  +----------+--------------+----------+
		  | COLUMN_1 | COLUMN_2     | COLUMN_3 |
		  +----------+--------------+----------+
		  |        1 | TAGNAME_1    |    1,000 |
		  +----------+--------------+----------+
		  |        2 | TAGNAME_2    |    2,000 |
		  +----------+--------------+----------+
		  |        3 | TAGNAME_3    |    3,000 |
		  +----------+--------------+----------+

		  then the easiest way to flip would be the following query:
		  SELECT
		  MAX(CASE WHEN [COLUMN_2] ='TAGNAME_1' THEN COLUMN_3 ELSE NULL  END) AS 'TAGNAME_1',
		  MAX(CASE WHEN [COLUMN_2] ='TAGNAME_2' THEN COLUMN_3 ELSE NULL  END) AS 'TAGNAME_2',
		  MAX(CASE WHEN [COLUMN_2] ='TAGNAME_3' THEN COLUMN_3 ELSE NULL  END) AS 'TAGNAME_3'
		  FROM DATATABLE_NAME
		  WHERE УСЛОВИЕ

		  In cases where the query is complex and consists of several tables, with the need to transmit time,
		  then it is better to use "KP tags based on the list of requested table rows".
		  For this mode, the sequence of columns and the values in them are important.
		  The first column (COLUMN_1) is the name of the KP tag, the second column (COLUMN_2) is the value of the KP tag, the third
		  column (COLUMN_3) is the date and time of the KP tag value.
		  The table should look like this
		  +-----------+--------------+--------------------+
		  | COLUMN_1  | COLUMN_2     | COLUMN_3           |
		  +-----------+--------------+--------------------+
		  | TAGNAME_1 |        1,000 | 01.01.2000 0:00:00 |
		  +-----------+--------------+--------------------+
		  | TAGNAME_2 |        2,000 | 02.01.2000 0:00:00 |
		  +-----------+--------------+--------------------+
		  | TAGNAME_2 |        3,000 | 02.01.2000 0:00:00 |
		  +-----------+--------------+--------------------+

		  In the case when the order of the columns is mixed up, the KP will give an error and the values will not be recorded!
		  In this mode, it is allowed if there is no third column, then the current time will be indicated.

		  Commands.
		  The commands are defined in the KP configuration.
		  Command example:
		  UPDATE DATATABLE_NAME SET COLUMN_2 = @cmdVal WHERE COLUMN_1 = @cmdNum
	  </Phrase>
  </Dictionary>
</DrvDbImportPlusDictionaries>
